{"version":3,"sources":["services/http.service.ts","config/global.config.ts","components/Members/Members.controller.tsx","AppContext.tsx","components/Members/Members.tsx","components/Members/MembersList.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["http_service","url","headers","Headers","fetch","method","mode","cache","credentials","response","json","console","error","_context","t0","undefined","body","Content-Type","redirect","referrer","JSON","stringify","append","_context3","_context4","global_config","app_config","backend_heroku_link","context_","_ref","state","dispatch","InitVoid","arr","App_Loader","type","AppChange","_callee","e","_e$target","apellido","nombre","cc_id","rama_id","rama","semestre","email","data","regenerator_default","a","wrap","prev","next","preventDefault","target","value","id_ciudadania","http","http_post","concat","config","sent","status","stop","_callee2","res","_context2","http_get","log","abrupt","warn","setTimeout","length","deleteMember","_x6","_x7","_x8","_deleteMember","apply","this","arguments","_callee3","id","Swal","fire","title","resMsg","delete_1","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","cancel_1","confirmButtonText","dismiss","http_delete","semestres","select_","j","push","react_default","createElement","key","defaultValue","_callee5","item","result","_context5","width","showCloseButton","edit","html","name_1","surname_1","cc_col_id","toUpperCase","branch","renderToString","className","required","disabled","ChooseOneOpc","email_address_2","focusConfirm","preConfirm","_preConfirm","Object","asyncToGenerator","mark","_callee4","document","getElementById","http_put","AppContext","createContext","Members","_useContext","useContext","useEffect","name","onSubmit","_x","_x2","_x3","_NewMember","NewMember","placeholder","save","MembersList","_x4","_x5","_getAllMembers","getAllMembers","map","onClick","_x9","_x10","_x11","_UpdateMember","UpdateMember","Boolean","window","location","hostname","match","ReactDOM","render","Modal","require","_useReducer","useReducer","action","objectSpread","_useReducer2","slicedToArray","Provider","react","bottomSheet","options","dismissible","open","actions","src","href","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11d75d31.chunk.js","sourcesContent":["class HttpService {\n  async http_get(url = '', headers = new Headers()) {\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default',\n        credentials: 'same-origin',\n      });\n      return await response.json();\n    } catch (error) {\n      console.error(error);\n      return undefined;\n    }\n  }\n\n  async http_post(url = '', body = {}) {\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(body),\n    });\n    return await response.json(); // parses JSON response into native Javascript objects\n  }\n\n  async http_delete(url = '', body = {}, headers = new Headers()) {\n    headers.append('Content-Type', 'application/json');\n    try {\n      const response = await fetch(url, {\n        method: 'delete',\n        //mode: 'cors', // no-cors, cors, *same-origin\n        headers: headers,\n        body: JSON.stringify(body),\n      });\n      return await response.json(); // parses JSON response into native Javascript objects\n    } catch (error) {\n      console.error(error);\n      return undefined;\n    }\n  }\n\n  async http_put(url = '', body = {}, headers = new Headers()) {\n    headers.append('Content-Type', 'application/json');\n   // parses JSON response into native \n    try {\n      const response = await fetch(url, {\n        method: 'PUT',\n        //mode: 'cors', // no-cors, cors, *same-origin\n        headers: headers,\n        body: JSON.stringify(body),\n      });\n      return await response.json(); // parses JSON response into native Javascript objects\n    } catch (error) {\n      console.error(error);\n      return undefined;\n    }\n  }\n}\n\nexport default new HttpService();\n","import { useContext } from 'react';\nimport { AppContext } from '../AppContext';\n\nclass Config {\n  public app_config = {\n    backend_heroku_link: 'https://backend-doze-info-manager.herokuapp.com',\n  };\n}\n\nexport default new Config();\n\nexport interface StateContext {\n  type?: any;\n  arr?: any;\n  App_Loader?: boolean;\n  InitVoid?: any; \n  AppChange?: boolean; \n}\n\n\n","import React, { useContext, useEffect } from 'react';\nimport { renderToString } from 'react-dom/server';\nimport http from '../../services/http.service';\nimport { resMsg } from 'rober19-config';\nimport config, { StateContext } from '../../config/global.config';\nimport Swal from 'sweetalert2';\n\nfunction context_(\n  { InitVoid, arr, App_Loader, type, AppChange }: StateContext,\n  state: any,\n  dispatch: any,\n) {\n  return dispatch({\n    InitVoid: InitVoid || state.InitVoid,\n    arr: arr || state.arr,\n    App_Loader: App_Loader != undefined ? App_Loader : state.App_Loader,\n    AppChange: AppChange != undefined ? AppChange : state.AppChange,\n    type: type || state.type,\n  } as StateContext);\n}\n\nexport async function NewMember(e: React.FormEvent<HTMLFormElement>, state: any, dispatch: any) {\n  e.preventDefault();\n\n  const { apellido, nombre, cc_id, rama_id, rama, semestre, email }: any = e.target;\n\n  const data = {\n    nombre: nombre.value,\n    apellido: apellido.value,\n    rama_id: rama_id.value,\n    rama: rama.value,\n    id_ciudadania: cc_id.value,\n    semestre: semestre.value,\n    email: email.value,\n  };\n\n  try {\n    let res = await http.http_post(`${config.app_config.backend_heroku_link}/member`, data);\n    if (res.status == 200) {\n      // console.log('es 200')\n      context_({ type: 'CHANGE_NAME', App_Loader: true }, state, dispatch);\n    }\n  } catch (error) {\n    context_({ type: 'CHANGE_NAME', App_Loader: true }, state, dispatch);\n  }\n  // console.log(res)\n}\n\nexport async function getAllMembers(state: any, dispatch: any) {\n  let res: any = await http.http_get(`${config.app_config.backend_heroku_link}/members`);\n  console.log(res);\n  console.log(state);\n\n  if (!state.InitVoid && res) {\n    return context_({ type: 'CHANGE_NAME', App_Loader: false, InitVoid: true }, state, dispatch);\n  }\n\n  if (!res) {\n    console.warn('Calling');\n    //peticion en caso de error para revisar conectividad cada 5 segundos\n    setTimeout(() => {\n      context_({ type: 'CHANGE_NAME', App_Loader: true }, state, dispatch);\n    }, 5000);\n  }\n  if ((res && res.length != state.arr.length) || (res && state.AppChange)) {\n    context_(\n      { type: 'CHANGE_NAME', App_Loader: false, arr: res, AppChange: false },\n      state,\n      dispatch,\n    );\n  }\n}\n\nexport async function deleteMember(id: string, state: any, dispatch: any) {\n  const result = await Swal.fire({\n    title: `${resMsg.delete_1}`,\n    text: \"No se prodrá revertir!\",\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    cancelButtonText:  `${resMsg.cancel_1}`,\n    confirmButtonText: `${resMsg.delete_1}?`\n  })\n\n  if (result.dismiss) return {};\n\n  try {\n    let res = await http.http_delete(`${config.app_config.backend_heroku_link}/member?id=${id}`);\n    if (res) {\n      //getAllMembers(state, dispatch); // console.log('es 200')\n      context_({ type: 'CHANGE_NAME', App_Loader: true }, state, dispatch);\n    }\n  } catch (error) {\n    context_({ type: 'CHANGE_NAME', App_Loader: true }, state, dispatch);\n  }\n}\n\nfunction semestres() {\n  let select_ = [];\n  for (let j = 1; j <= 10; j++) {\n    select_.push(\n      <option key={j} defaultValue={`${j}`}>\n        {j}\n      </option>,\n    );\n  }\n  //return renderToString(select_ as any); //para convertirlo de [object] a html\n  return select_;\n}\n\nexport async function UpdateMember(item: any, state: any, dispatch: any) {\n  const { apellido, nombre, rama_id, id_ciudadania, rama, semestre, email } = item;\n\n  \n  const result = await Swal.fire({\n    title: 'Formulario de Actualización',\n    width: '1000px',\n    type: 'info',   \n    showCloseButton: true,\n    showCancelButton: true,\n    confirmButtonText: `${resMsg.edit}`,\n    cancelButtonText:  `${resMsg.cancel_1}`, \n    html: `  \n    <form class=\"col s12\" name=\"form\" >\n          <div class=\"row\">\n            <div class=\"col s12 m6\">\n              <input                \n                id=\"nombre-editar\"\n                type=\"text\"\n                class=\"input-field\" \n                name=\"nombre\"\n                value=\"${nombre}\"\n                required\n              />\n              <label>${resMsg.name_1}</label>\n            </div>\n            <div class=\"col s12 m6\">\n              <input\n                id=\"apellido-editar\"\n                name=\"apellido\"\n                type=\"text\"\n                class=\"input-field\"    \n                value=${apellido}            \n                required\n              />\n              <label>${resMsg.surname_1}</label>\n            </div>\n          </div>\n\n          <div class=\"row\">\n          <div class=\"col s12 m6\">\n              <input\n                id=\"cc_id-editar\"\n                name=\"cc_id\"               \n                type=\"text\"\n                class=\"input-field\"           \n                value=${id_ciudadania}\n                required\n              />\n              <label>${resMsg.cc_col_id.toUpperCase()}</label>\n            </div>\n            <div class=\"col s12 m6\">\n              <input\n                id=\"rama_id-editar\"\n                name=\"rama_id\"\n                type=\"text\"\n                class=\"input-field\"      \n                value=${rama_id}            \n                required\n              />\n              <label>${resMsg.branch}-ID</label>\n            </div>\n          </div>\n\n         \n        ${renderToString(\n          <div className=\"row\">\n            <div className=\"col s6\">\n              <select\n                id=\"semestre-editar\"\n                className=\"browser-default\"\n                defaultValue={semestre}\n                required\n              >\n                <option value=\"\" disabled>\n                  {resMsg.ChooseOneOpc}\n                </option>\n                {semestres()}\n                <option defaultValue=\"Escuela\">Escuela</option>\n                <option defaultValue=\"Otro\">Otro</option>\n              </select>\n              <label>Semestre</label>\n            </div>\n            <div className=\"col s12 m6\">\n              <select id=\"rama-editar\" className=\"browser-default\" defaultValue={rama} required>\n                <option value=\"\" disabled>\n                  {resMsg.ChooseOneOpc}\n                </option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n              </select>\n              <label>{resMsg.branch}</label>\n            </div>\n          </div>,\n        )}\n          <div class=\"row\">\n            <div class=\"col s12 m6\">\n              <input\n                id=\"email-editar\"\n                name=\"email\"\n                type=\"email\"\n                class=\"input-field\" \n                value=${email}              \n                required\n              />\n              <label>${resMsg.email_address_2}</label>\n            </div>\n          </div>        \n        </form>\n    `,\n    focusConfirm: false,\n    preConfirm: async () => {\n      return await {\n        nombre: (document.getElementById('nombre-editar') as any).value,\n        apellido: (document.getElementById('apellido-editar') as any).value,\n        id_ciudadania: (document.getElementById('cc_id-editar') as any).value,\n        rama: (document.getElementById('rama-editar') as any).value,\n        rama_id: (document.getElementById('rama_id-editar') as any).value,\n        semestre: (document.getElementById('semestre-editar') as any).value,\n        email: (document.getElementById('email-editar') as any).value,\n        // document.getElementById('swal-input2').value,\n        // document.getElementById('swal-input3').value,\n      };\n    },\n  });\n\n  if (result.dismiss) return {};\n\n  try {\n    const res = await http.http_put(\n      `${config.app_config.backend_heroku_link}/member?id=${item.id}`,\n      result.value,\n    );\n    if (res.status == 200) {\n      console.log('pasó');\n      context_(\n        { type: 'CHANGE_NAME', App_Loader: true, AppChange: true } as StateContext,\n        state,\n        dispatch,\n      );\n    }\n  } catch (error) {\n    console.log(error);\n    context_({ type: 'CHANGE_NAME', App_Loader: true }, state, dispatch);\n  }\n}\n","import { createContext } from 'react';\n\nexport const AppContext = createContext({});","import React, { useContext, useEffect } from 'react';\nimport { resMsg } from 'rober19-config';\nimport http from '../../services/http.service';\nimport config, { StateContext } from '../../config/global.config';\nimport { NewMember } from './Members.controller';\nimport { AppContext } from '../../AppContext';\n\nexport default function Members() {\n  const { state, dispatch }: any = useContext(AppContext);\n\n  useEffect(() => {\n    //console.log(`Component One`);\n  });\n\n  function context_({ InitVoid, arr, App_Loader, type }: StateContext) {\n    return dispatch({\n      InitVoid: InitVoid || state.InitVoid,\n      arr: arr || state.arr,\n      App_Loader: App_Loader != undefined ? App_Loader : state.App_Loader,\n      type: type || state.type,\n    } as StateContext);\n  }\n\n  function semestres() {\n    let select_ = [];\n    for (let j = 1; j <= 10; j++) {\n      select_.push(\n        <option key={j} defaultValue={`${j}`}>\n          {j}\n        </option>,\n      );\n    }\n    return select_;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Formulario</h1>\n\n      <div className=\"row\">\n        <form className=\"col s12\" name=\"form\" onSubmit={e => NewMember(e, state, dispatch)}>\n          <div className=\"row\">\n            <div className=\"input-field col s12 m6\">\n              <input\n                placeholder=\"Jack\"\n                id=\"nombre\"\n                type=\"text\"\n                className=\"validate\"\n                name=\"nombre\"\n                required\n              />\n              <label>{resMsg.name_1}</label>\n            </div>\n            <div className=\"input-field col s12 m6\">\n              <input\n                id=\"apellido\"\n                name=\"apellido\"\n                type=\"text\"\n                className=\"validate\"\n                placeholder=\"Frost\"\n                required\n              />\n              <label>{resMsg.surname_1}</label>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"input-field col s12 m6\">\n              <input\n                id=\"cc_id\"\n                name=\"cc_id\"\n                placeholder=\"CC #.###.###\"\n                type=\"text\"\n                className=\"validate\"\n                required\n              />\n              <label>{resMsg.cc_col_id.toUpperCase()}</label>\n            </div>\n            <div className=\"input-field col s12 m6\">\n              <input\n                id=\"rama_id\"\n                name=\"rama_id\"\n                type=\"text\"\n                className=\"validate\"\n                placeholder=\"4\"\n                required\n              />\n              <label>{resMsg.branch}-ID</label>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col s12 m6\">\n              <select id=\"semestre\" className=\"browser-default\" defaultValue=\"\" required>\n                <option value=\"\" disabled>\n                  {resMsg.ChooseOneOpc}\n                </option>\n                {semestres()}\n                <option defaultValue=\"Escuela\">Escuela</option>\n                <option defaultValue=\"Otro\">Otro</option>\n              </select>\n              <label>Semestre</label>\n            </div>\n            <div className=\"col s12 m6\">\n              <select id=\"rama\" className=\"browser-default\" defaultValue=\"\" required>\n                <option value=\"\" disabled>\n                  {resMsg.ChooseOneOpc}\n                </option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n              </select>\n              <label>{resMsg.branch}</label>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                className=\"validate\"\n                placeholder=\"jack@frost.com\"\n                required\n              />\n              <label>{resMsg.email_address_2}</label>\n            </div>\n          </div>\n          <button className=\"btn blue waves-effect waves-light\" type=\"submit\" name=\"action\">\n            {resMsg.save}\n            <i className=\"material-icons right\">send</i>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { Component, useState, useEffect, useContext } from 'react';\nimport './Members.css';\nimport { resMsg } from 'rober19-config';\nimport { deleteMember, getAllMembers, UpdateMember } from './Members.controller';\nimport { AppContext } from '../../AppContext';\n\nexport default function MembersList() {\n  //const [members, setMembers] = useState<[]>([]);\n\n  const { state, dispatch }: any = useContext(AppContext);\n\n  useEffect(() => {\n    //console.table(state);\n    getAllMembers(state, dispatch);\n  });\n\n  //const { Modal } = require('react-materialize');\n\n  return (\n    <div className=\"container\">\n      <div className=\"row \">\n        <div className=\"\">\n          <table className=\"responsive-table bordered\">\n            <thead>\n              <tr>\n                <th>{resMsg.name_1}</th>\n                <th>{resMsg.branch}</th>\n                <th>Doze ID</th>\n                <th>-</th>\n                <th>-</th>\n              </tr>\n            </thead>\n            <tbody>\n              {state.arr\n                ? state.arr.map((item: any) => {\n                    if (!item) return {};\n                    let { id, nombre, rama, rama_id } = item;\n                    return (\n                      <tr key={id}>\n                        <td>{nombre}</td>\n                        <td>{rama}</td>\n                        <td>\n                          D{rama}-{rama_id}\n                        </td>\n                        <td>\n                          <div className=\"col s12 m12\">\n                            <button\n                              className=\"btn cyan waves-effect waves-light\"\n                              type=\"submit\"\n                              name=\"action\"\n                              onClick={e => UpdateMember(item, state, dispatch)}\n                            >\n                              {resMsg.edit}\n                              <i className=\"material-icons right\">insert_comment</i>\n                            </button>\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"col s12 m12\">\n                            <button\n                              className=\"btn orange waves-effect waves-light\"\n                              type=\"submit\"\n                              name=\"action\"\n                              onClick={async e => deleteMember(id, state, dispatch)}\n                            >\n                              {resMsg.delete_1}\n                              <i className=\"material-icons right\">delete_sweep</i>\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })\n                : null}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize';\nimport React, { useReducer, Fragment } from 'react';\nimport Members from './components/Members/Members';\nimport MembersList from './components/Members/MembersList';\nimport { AppContext } from './AppContext';\nimport { StateContext } from './config/global.config';\n\nexport default function App() {\n  let defaultData: StateContext = {\n    arr: [],\n    App_Loader: true,\n    InitVoid: false,\n    AppChange: false,\n    type: '',\n  };\n\n  const { Modal } = require('react-materialize');\n\n  const [state, dispatch] = useReducer((state, action) => {\n    //console.log(action.type)\n    switch (action.type) {\n      case 'CHANGE_NAME':\n        return {\n          ...state,\n          arr: action.arr,\n          App_Loader: action.App_Loader,\n          InitVoid: action.InitVoid,\n          AppChange: action.AppChange\n        };\n      default:\n        return {};\n    }\n  }, defaultData);\n\n  //const trigger = <Button>Open Modal</Button>;\n\n  return (\n    <div>\n      {/* <Spinner size={120} spinnerColor={'#333'} spinnerWidth={2} visible={true} /> */}\n      <AppContext.Provider value={{ state, dispatch }}>\n        <Fragment>\n          <Members />\n          <MembersList />\n        </Fragment>\n      </AppContext.Provider>\n      {true ? (\n        <div>\n          <Modal\n            bottomSheet\n            options={{ dismissible: false }}\n            open={state.App_Loader}\n            actions={null}\n          >\n            <div className=\"sk-folding-cube\">\n              <div className=\"sk-cube1 sk-cube\" />\n              <div className=\"sk-cube2 sk-cube\" />\n              <div className=\"sk-cube4 sk-cube\" />\n              <div className=\"sk-cube3 sk-cube\" />\n            </div>\n          </Modal>\n        </div>\n      ) : null}\n\n      <footer className=\"page-footer\">\n        <div className=\"row\">\n          <div className=\"col md12 s12 center-align\">\n            <img className=\"responsive-img\" src=\"assets/img/doze.png\" />\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col l6 s12\">\n              <h5 className=\"white-text\">Info-Manager</h5>\n              <p className=\"grey-text text-lighten-4\">\n                Este es el prototipo de control de información de doze-group\n              </p>\n            </div>\n            <div className=\"col l4 offset-l2 s12\">\n              <h5 className=\"white-text\">Encuentranos: </h5>\n              <ul>\n                <li>\n                  <a className=\"grey-text text-lighten-3\" href=\"https://github.com/doze-group\">\n                    Github\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            © 2019 doze-group\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">\n              Web\n            </a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n"],"sourceRoot":""}